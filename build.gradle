buildscript {
    ext.artifactId = 'partypay'
    ext.project_version = '0.0.7'
    ext.archive_extension = 'jar'
    ext.archive_file_name = "${artifactId}-${project_version}.${archive_extension}"

    ext.kotlin_version = '1.5.21'
    ext.jacoco_palantir_version = '0.4.0'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }

        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
            classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
            classpath "com.palantir:jacoco-coverage:$jacoco_palantir_version"
        }
    }
}

version = ext.project_version
group = 'br.com.fairie.partypay'
description = "Api do partypay"

apply plugin: 'jacoco'
apply plugin: "kotlin-jpa"

jacoco {
    toolVersion = "0.8.3"
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    ext {
        versions = [
                junit               : "4.13.1",
                jupiter             : "5.2.0",
                spring              : "2.5.3",
                jpa                 : "2.6.3",
                spring_core         : "5.3.9",
                spring_security_core: "5.5.1",
                mysql               : "5.1.46",
                jackson_kotlin      : '2.9.7',
                swagger             : '2.9.2',
                mockk               : '1.9',
                h2                  : '1.4.200',
                codecentric         : '2.4.3',
                jjwt                : '0.9.1'
        ]

        libs = [
                unit_test      : [
                        "junit:junit:${versions.junit}",
                        "org.junit.jupiter:junit-jupiter-api:${versions.jupiter}",
                        "org.junit.jupiter:junit-jupiter-params:${versions.jupiter}",
                        "org.junit.jupiter:junit-jupiter-engine:${versions.jupiter}",
                        "io.mockk:mockk:${versions.mockk}",
                ],
                spring_test    : [
                        "org.springframework.boot:spring-boot-starter-test:${versions.spring}",
                ],
                spring_web     : [
                        "org.springframework.boot:spring-boot-starter-web:${versions.spring}",
                        "org.springframework.boot:spring-boot-starter-validation:${versions.spring}",
                        "org.springframework.boot:spring-boot-starter-security:${versions.spring}",
                ],
                spring_provider: [
                        "org.springframework:spring-core:${versions.spring_core}",
                        "org.springframework.security:spring-security-core:${versions.spring_security_core}",
                        "org.springframework.boot:spring-boot-starter-jdbc:${versions.spring}",
                        "org.springframework.boot:spring-boot-starter-data-jpa:${versions.jpa}",
                        'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.4'

                ],
                spring_config  : [
                        "com.fasterxml.jackson.module:jackson-module-kotlin:${versions.jackson_kotlin}",
                        "org.springframework.boot:spring-boot-configuration-processor:${versions.spring}",
                        "de.codecentric:spring-boot-admin-starter-client:${versions.codecentric}",
                        "io.jsonwebtoken:jjwt:${versions.jjwt}"
                ],
                swagger        : [
                        "io.springfox:springfox-swagger2:${versions.swagger}",
                        "io.springfox:springfox-swagger-ui:${versions.swagger}"
                ],
                database       : [
                        "mysql:mysql-connector-java:${versions.mysql}",
                        "com.h2database:h2:${versions.h2}"
                ]
        ]
    }
}

configure(allprojects - project(":application")) {
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: 'jacoco'
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "kotlin-jpa"


    jacoco {
        toolVersion = "0.8.3"
    }
    compileKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
        kotlinOptions.javaParameters = true
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
        kotlinOptions.javaParameters = true
    }

    test {
        useJUnitPlatform() {
            excludeTags("integration")
        }
    }

    task integrationTest(type: Test) {
        group = "verification"
        useJUnitPlatform() {
            includeTags("integration")
        }
        check.dependsOn it
        shouldRunAfter test
    }
}

jar {
    manifest.attributes(
            'Class-Path': 'partypay.application.configuration.main',
            'Main-Class': 'br.com.fairie.partypay.PartypayApplication.kt'
    )
}

task jacocoMergeTest(type: JacocoMerge) {
    destinationFile = file("$buildDir/jacoco/all-test.exec")
    executionData = project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
}

wrapper {
    gradleVersion = '7.0'
}
